@use "styles/variables";
@use "styles/debug";
@use "sass:color";
@use "sass:math";

@function getDynamicBarColor($index) {
  $bar-color: variables.$green-medium;

  @if ($index == 0) {
    $bar-color: variables.$yellow-light;
  } @else if ($index == 1) {
    $bar-color: variables.$purple-dark;
  } @else if($index == 2) {
    $bar-color: variables.$purple-pink;
  } @else if($index == 3) {
    $bar-color: variables.$orange;
  } @else if($index == 4) {
    $bar-color: variables.$red;
  }

  @return $bar-color;
}

@mixin getBarHighlightStyles($index) {
  $bar-color: getDynamicBarColor($index);

  &.highlight-#{$index} {
    z-index: 1;
    :is(.visualizer-bar__bar, .legend-tile) {
      background: $bar-color;
    }

    .visualizer-bar__label {
      color: $bar-color;
    }

    @for $index2 from 1 through 2 {
      &.highlight-#{$index - $index2} {
        $color-stop: getDynamicBarColor($index - $index2);
        .visualizer-bar__bar {
          background: linear-gradient(to top, $color-stop, $color-stop, $bar-color, $bar-color);
        }
      }

      &.highlight-#{$index + $index2} {
        $color-stop: getDynamicBarColor($index + $index2);
        .visualizer-bar__bar {
          background: linear-gradient(to top, $bar-color, $bar-color, $color-stop, $color-stop);
        }
      }
    }
  }
}

.viewer-component {
  overflow-y: auto;
  width: 100%;
  height: 100%;
  padding: variables.$outer-padding;
  padding-top: 15px;
}

.title-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  width: 100%;
  //height: calc(7% - 10px);
  color: variables.$green-dark;

  &__title {
    width: 180px;
    font-size: 1.15rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-right: 40px;
    margin-bottom: 15px;
  }

  &__tags {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  &__complexity {
    display: flex;
    align-items: baseline;
    height: 24px;
    background: rgba(variables.$orange, 0.15);
    border: 1px solid rgba(variables.$green-dark, 0.6);
    border-radius: 5px;
    font-weight: 600;
    padding: 0 8px;
    margin-bottom: 15px;

    &:not(:last-of-type) {
      margin-right: 20px;
    }

    p {
      display: inline-flex;
      align-items: center;
      vertical-align: middle;
      height: 20px;

      &:nth-of-type(1) {
        font-size: 0.6rem;
        line-height: 0.7rem;
        text-transform: uppercase;
        color: rgba(variables.$green-dark, 0.8);
      }

      &:nth-of-type(2) {
        font-size: 0.8rem;
        margin-left: 10px;
      }

      sup {
        position: relative;
        bottom: 3px;
        vertical-align: super;
        font-size: 0.55rem;
      }
    }
  }
}

.visualizer {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  width: 100%;
  min-width: 300px;
  height: 70%;
  max-height: 450px;
  min-height: 300px;
  border: 1px solid variables.$green-medium;
  border-radius: 5px;
  padding: 20px 20px 0 20px;
}

.visualizer-bar {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: stretch;
  height: 100%;
  color: variables.$white;
  padding: 0 1px;

  &:hover {
    z-index: 1;
  }

  &.first-entry .visualizer-bar__label::before,
  &.last-entry .visualizer-bar__label::after {
    bottom: 3px;
    color: variables.$green-dark ;
    font-size: 0.8rem;
    font-weight: 600;
  }

  &.first-entry {
    .visualizer-bar {
      &__label::before {
        content: '[';
        left: -10px;
      }
    }
  }

  &.last-entry {
    .visualizer-bar {
      &__label::after {
        content: ']';
        right: -10px;
      }
    }
  }

  &__label {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 20px;
    min-height: 20px;
    color: variables.$green-dark;
    font-size: 0.7rem;
    font-weight: 600;
    margin: 10px 0;

    &::before, &::after {
      position: absolute;
    }

    &::after {
      content: ',';
      right: 0;
    }
  }

  &__bar {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    height: calc(100% - 40px);
    width: 100%;
    background: variables.$green-medium;
    border: 1px solid variables.$white;
    border-bottom: none;
    transform-origin: 50% 100%;

    &::after {
      content: attr(data-value);
      position: absolute;
      top: -25px;
      left: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-width: 100%;
      height: 20px;
      min-height: 20px;
      max-height: 20px;
      opacity: 0;
      background: lighten(variables.$blue-light, 10%);
      border: 1px solid rgba(variables.$green-dark, 0.6);
      border-radius: 5px;
      border-bottom-left-radius: 0;
      color: variables.$green-dark;
      font-size: 0.7rem;
      font-weight: 600;
      padding: 3px 5px;
      transform-origin: 0% 100%;
      transform: scale(0.5);
      transition: opacity 0.1s, transform 0.1s;
    }

    &:hover::after {
      opacity: 1;
      transform: scale(1);
    }
  }

  &:not(:first-of-type) &__bar {
    border-right: none;
  }

  &.sorted {
    .visualizer-bar {
      &__bar {
        background: variables.$blue-light;
      }
    }
  }

  @for $bar-index from 0 through 4 {
    @include getBarHighlightStyles($bar-index);
  }

  &.done {
    .visualizer-bar {
      &__bar {
        background: variables.$blue-light !important;
      }

      &__label {
        color: variables.$green-dark;
      }
    }
  }
}


.info {
  display: grid;
  //grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-template-columns: minmax(200px, 1fr) minmax(400px, 3fr);
  //grid-template-columns: minmax(200px, 1fr) 3fr;
  //justify-content: stretch;
  grid-auto-flow: row;
  column-gap: 10px;
  row-gap: 10px;
  width: 100%;
  min-width: 250px;
  height: 23%;
  color: variables.$green-dark;
  font-size: 0.85rem;
  line-height: 0.88rem;
  font-weight: 500;
  padding: 10px 0;

  strong {
    font-weight: 600;
  }

  &__legend {
    grid-column: span auto;
    background: rgba(variables.$orange, 0.1);
    border: 1px solid rgba(variables.$green-dark, 0.6);
    border-radius: 5px;
    padding: 8px;

    &__definition {
      display: flex;
      font-weight: 600;
      margin-bottom: 5px;

      .legend-tile {
        width: 15px;
        height: 15px;
        border: 1px solid rgba(variables.$green-dark, 0.6);
        border-radius: 2px;
        margin-right: 20px;
      }

      &.sorted {
        .legend-tile {
          background: variables.$blue-light;
        }
      }

      &.done {
        .legend-tile {
          background: variables.$blue-light;
        }
      }

      &.highlight-default {
        .legend-tile {
          background: variables.$green-medium;
        }
      }

      @for $bar-index from 0 through 4 {
        @include getBarHighlightStyles($bar-index);
      }
    }
  }

  &__explanation {
    display: flex;
    justify-self: stretch;
    flex-direction: column;
    justify-content: space-between;
    background: rgba(variables.$green-light, 0.2);
    border: 1px solid rgba(variables.$green-dark, 0.6);
    border-radius: 5px;
    padding: 8px;

    &__body {
      font-size: 0.8rem;
      line-height: 1.1rem;
      margin-top: 5px;

      code {
        position: relative;
        bottom: 1px;
      }

      em {
        font-style: italic;
      }

      u {
        font-variant: small-caps;
        font-weight: 600;
        font-size: 0.9rem;
      }
    }

    a {
      color: variables.$red;

      &:hover {
        text-decoration: underline;
      }
    }
  }
}

@media only screen and (max-width: 800px) {
  .visualizer {
    max-height: 300px;
  }

  .visualizer-bar {
    &__label {
      opacity: 0;
      margin: 0;
    }
  }

  .info {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    min-height: 250px;
    margin-bottom: 200px;

    &__legend {
      order: 1;
      min-height: 150px;
    }

    &__explanation {
      order: 0;
      height: max-content;
      min-height: 150px;

      & > div {
        &:nth-of-type(2) {
          margin-top: 10px;
        }
      }
    }
  }
}

@media only screen and (min-width: 800px) and (max-width: 1150px) {
  .visualizer {
    &.dense {
      .visualizer-bar {
        &__label {
          opacity: 0;
          margin: 0;
        }
      }
    }
  }
}
